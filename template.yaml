AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  sam_sold

  Powertools example

Globals: # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy-globals.html
  Function:
    Timeout: 5
    MemorySize: 128
    Runtime: python3.12

    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      Handler: app.lambda_handler
      CodeUri: hello_world
      Description: Hello World function
      Architectures:
        - x86_64
      Tracing: Active
      Events:
        HelloPath:
          Type: Api # More info about API Event Source: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-api.html
          Properties:
            Path: /hello
            Method:
              GET
              # Powertools env vars: https://awslabs.github.io/aws-lambda-powertools-python/#environment-variables
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: PowertoolsHelloWorld
          POWERTOOLS_METRICS_NAMESPACE: Powertools
          LOG_LEVEL: INFO
      Tags:
        LambdaPowertools: python
  PlaceBidFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: place_bid.lambda_handler
      CodeUri: src
      Description: Place Bid function
      Architectures:
        - x86_64
#      Tracing: Active
      Events:
        PlaceBidPath:
          Type: Api
          Properties:
            Path: /bid
            Method: post
      Policies:
        - Statement:
            Effect: Allow
            Action:
              - sqs:SendMessage
            Resource: !GetAtt ProcessBidQueue.Arn
      Environment:
        Variables:
          BID_QUEUE_URL: !Ref ProcessBidQueue


  ProcessBidFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: process_bid.lambda_handler
      CodeUri: src
      Description: Process Bid Queue Worker
      Architectures:
        - x86_64
      Events:
        SQSTrigger:
          Type: SQS
          Properties:
            Queue: !GetAtt ProcessBidQueue.Arn
            BatchSize: 10
      Policies:
        - SQSPollerPolicy:
            QueueName: !Ref ProcessBidQueue
      Environment:
        Variables:
          BID_QUEUE_URL: !Ref ProcessBidQueue


  ProcessBidQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${AWS::StackName}-bid-queue"

#  MyFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      Handler: app.lambda_handler
#      CodeUri: .
#      Events:
#        SQSTrigger:
#          Type: SQS
#          Properties:
#            Queue: !GetAtt BidQueue.Arn
#      Policies:
#        - SQSPollerPolicy:
#            QueueName: !GetAtt BidQueue.QueueName

Outputs:
  HelloWorldApi:
    Description: API Gateway endpoint URL for for Hello World
      Function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/"
  BidQueueName:
    Description: "Name of the bid queue"
    Value: !GetAtt ProcessBidQueue.QueueName